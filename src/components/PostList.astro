---
import { getCollection } from "astro:content";
import { getJekyllUrl } from "../utils/jekyll-urls";
import { createExcerpt } from "../utils/excerpt";

const posts = await getCollection("blog");
const sortedPosts = posts.sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

function formatDate(date: Date): string {
  return date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
}

// Generate excerpts for each post
const postsWithExcerpts = await Promise.all(
  sortedPosts.map(async (post) => {
    return {
      ...post,
      slug: getJekyllUrl(post.data.title, post.data.categories),
      excerpt: post.data.description ?? createExcerpt(post.body),
    };
  })
);
---

<ol class="post-list no-list-style">
  {
    postsWithExcerpts.map((post) => (
      <li class="post-item">
        <h3 class="post-item__title">
          <a href={post.slug}>{post.data.title}</a>
        </h3>
        <div class="post-item__meta">
          <span>{formatDate(post.data.date)}</span>
          {post.data.categories && post.data.categories.length > 0 && (
            <>
              &#x2022;
              <ul class="inline-list separators">
                {post.data.categories.map((cat) => (
                  <li>{cat.toUpperCase()}</li>
                ))}
              </ul>
            </>
          )}
        </div>
        {post.excerpt && <p class="post-excerpt">{post.excerpt}</p>}
      </li>
    ))
  }
</ol>
